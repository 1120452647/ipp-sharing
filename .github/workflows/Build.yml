name: Build and Release Rust Project

on:
  push:
    tags:
      - 'v*'  # 推送标签触发（如 v1.0.0）
  workflow_dispatch:  # 手动触发
  release:
    types: [published]  # 发布 Release 时触发

jobs:
  build:
    runs-on: windows-latest

    steps:
    # 1. 检出代码（使用最新版 checkout）
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. 配置 Rust 环境（指定 Windows 目标平台）
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-pc-windows-msvc
        override: true

    # 3. 构建 Release 版本
    - name: Build Release
      run: cargo build --release --target x86_64-pc-windows-msvc

    # 4. 发布到 GitHub Releases（新版 Action，无需 set-output）
    - name: Release to GitHub
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        files: |
          target/x86_64-pc-windows-msvc/release/ipp-sharing.exe  # 替换为你的项目名
        draft: false
        prerelease: false

    # 5. 上传构建产物（临时下载，7 天后自动清理）
    - name: Upload EXE as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-exe
        path: target/x86_64-pc-windows-msvc/release/ipp-sharing.exe
        retention-days: 7
